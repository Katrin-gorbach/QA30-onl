package lesson_6_objects_game.guessword;

import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class GuessWord {
	public static void main(String[] args){
		startGame();

		//Алгоритм - то определенное кол-во операций в определенном порядке

		//1. преветсвенное сообщение и приглашение сыграть в игру
		//2. если принимаем приглашение, то играем
		// 2.1. если не принимаем, то выходим из игры
		//3.  если играем - задаем инструкцию
		//4. создаем определенный массив слов, который будем хранить в массиве
		//5. через использование класса Рандом, выбираем случаем слово
		//6. после выбора предлагаем участнику сыграть
		//7. слово угадывается по буквам или целое
		//8. если по буквам - проверить существует такая буква и вывести на экран
		// 8.1 если букву не отгадали - вывести соответсвующее сообщение и продолжить отгадывать
		//9. если была поптыка угадать слово полностью, проверить угадано или нет, победа - сообщение и запрашиваем
		//хотят ли снова сыграть в игру
		// 9.1 не угадали - выводим сообщение и продолжаем угадывать
		//10. когда все угадано - тогда победа и запрашиваем хотят ли играть снова
		// нет - прощание, да - занова

	}

	public static void startGame(){
		getIntroductionMsg();
		if (playGame()) {
			//System.out.println("LETS PLAY GAME!");

			getInstructions();

			//Вызов метода words() - массив со словами
			//Пробросили этот массив в getRandomWord()
			//Вернули строчку и через метод toCharArray() трансформировали его в массив символов
			char[] hiddenWord = getRandomeWord(words()).toCharArray();

			System.out.println("Your generated word is : ".toUpperCase());
			showWord(hiddenWord);

			while (true){
				System.out.print("Please enter a LETTER or WHOLE WORD to guess:");

				String input = input().nextLine();

				if(input.length() == 1){
					//If only one letter was written
					//1. проверить есть ли такая буква
					//если нету, продолжаем
					//если есть , то показать еев слове, а остальные оставить скрытые
					// например: banana, ввели букву - а
					//на экране будет *a*a*a
					//ввели след b - ba*a*a
					//продолжать вводить буквы
					//следует проверить не закончились ли буквы
					//если все буквы угаданы - проверить статус и вы победили

					//добавить механиз повтора игры. если победил - спросить хотят ли еще раз сыграть, нет - выход
				} else if(input.length() >1 ) {
					//If word was written
					if(checkWord(input,hiddenWord)){
						System.out.print("WIN!");
						return;
					} else {
						System.out.println("YOU MISSED!");
					}
				}


			}

		} else {
			System.out.println("GOODBYE!");
		}

	}

	public static void getIntroductionMsg(){
		System.out.println("Welcome to Guess Word Game");
		System.out.println("You should guess the word that will be generated by PC");
	}

	public static boolean playGame(){
		System.out.println("********************************************************");
		System.out.println("Would you like to play the GAME? ( y - YES, the rest - NO): ");

		if (input().nextLine().equalsIgnoreCase("y")){
			return true;
		}
		return false;
	}

	public static void getInstructions(){
		System.out.println("You should guess the word either by a LETTER or a FULL WORD");
	}

	public static String[] words(){
		return new String[]{
				"Apple", "House", "Cat", "Java", "Note", "Bag", "Tree"
		};

	}
	public static void showWord(char[] word){
		for(char letter : word){
			System.out.print(letter + "\t");
		}
		System.out.println();
	}

	public static String getRandomeWord(String[] hiddenWords){
		return hiddenWords[new Random().nextInt(0,hiddenWords.length)]; // достать элемент в массиве
		 // от 0 до длины массива
	}

	public static boolean checkWord(String input, char[] word){
		return String.valueOf(word).equalsIgnoreCase(input); // String.valueOf - превращает значения
		// в строчку
	}

	public static Scanner input(){
		return new Scanner(System.in);
	}
}
